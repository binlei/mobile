<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.jshuabo.mobile.server.dao.batchinstall.IAppPackageInfoMapper">

	<resultMap id="appPackageInfoResultMap" type="AppPackageInfo">
		<id column="ID" property="id" jdbcType="BIGINT" />
		<result column="NAME" property="name" jdbcType="VARCHAR" />
		<result column="SIZE" property="size" jdbcType="DOUBLE" />
		<result column="QUANTITY" property="quantity" jdbcType="INTEGER" />
		<result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
		<result column="STATUS" property="status" jdbcType="VARCHAR" />

		<result property="info.creatorId" column="CREATOR_ID" />
		<result property="info.creator" column="CREATOR" />
		<result property="info.createdTime" column="CREATED_TIME" />
		<result property="info.lastOperatorId" column="LAST_OPERATOR_ID" />
		<result property="info.lastOperator" column="LAST_OPERATOR" />
		<result property="info.lastOperatedTime" column="LAST_OPERATED_TIME" />

		<association property="organization" column="ORGANIZATION_ID" javaType="com.jshuabo.frame.server.model.organization.Organization" select="com.jshuabo.frame.server.dao.organization.IOrganizationMapper.load"></association>
		<association property="appPackageType" column="APP_PACKAGE_TYPE_ID" javaType="com.jshuabo.mobile.server.model.batchinstall.AppPackageType" select="com.jshuabo.mobile.server.dao.batchinstall.IAppPackageTypeMapper.load"></association>
		
		<collection property="details" column="ID" ofType="com.jshuabo.mobile.server.model.batchinstall.AppPackageInfoDetail" select="com.jshuabo.mobile.server.dao.batchinstall.IAppPackageInfoDetailMapper.queryDetail" />
	</resultMap>
	
	<!-- 查询包名是否有相同 -->
	<select id="queryAppPackageNameByName" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT COUNT(id) FROM t_app_package_info WHERE `NAME` = #{appPackageName}
	</select>
	
	<sql id="createTable">
		<![CDATA[
		CREATE TABLE `t_app_package_info` (
				  `ID` bigint(20) NOT NULL PRIMARY KEY auto_increment,
				  `NAME` varchar(255) default NULL,
				  `ORGANIZATION_ID` bigint(20) default NULL,
				  `APP_PACKAGE_TYPE_ID` bigint(20) default NULL,
				  `QUANTITY` int(11) default NULL,
				  `SIZE` double default NULL,
				  `DESCRIPTION` varchar(255) default NULL,
				  `STATUS` varchar(255) default NULL,
				  `CREATED_TIME` date default NULL,
				  `CREATOR_ID` bigint(20) default NULL,
				  `CREATOR` varchar(255) default NULL,
				  `LAST_OPERATOR_ID` bigint(20) default NULL,
				  `LAST_OPERATOR` varchar(255) default NULL,
				  `LAST_OPERATED_TIME` date default NULL,
				  PRIMARY KEY  (`ID`),
				  KEY `FK_APP_PKG_TYPE` (`APP_PACKAGE_TYPE_ID`),
				  CONSTRAINT `FK_APP_PKG_TYPE` FOREIGN KEY (`APP_PACKAGE_TYPE_ID`) REFERENCES `t_app_package_type` (`ID`)
				) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
		]]>
	</sql>
	
	<sql id="Base_Column_List">
		ID, NAME, ORGANIZATION_ID,APP_PACKAGE_TYPE_ID, QUANTITY, SIZE, DESCRIPTION, STATUS,
		CREATED_TIME,
		CREATOR_ID, CREATOR, LAST_OPERATOR_ID, LAST_OPERATOR, LAST_OPERATED_TIME
	</sql>
		
	<!-- 根据应用包类型 ID 查询应用包 -->
	<select id="queryAppPgkInfoByPgkTypeId" parameterType="java.lang.Long" resultType="Map">
		SELECT api.id,api.`NAME`'name',api.SIZE 'size',api.QUANTITY FROM t_app_package_info api WHERE api.APP_PACKAGE_TYPE_ID =  #{0} AND api.ORGANIZATION_ID = #{1}
	</select>
	
	<delete id="deleteById" parameterType="java.lang.Long" flushCache="true">
		delete from t_app_package_info where ID = #{appPkgInfoId}
	</delete>
	
	<select id="page" parameterType="map" resultType="AppPackageInfo" resultMap="appPackageInfoResultMap">
			SELECT * FROM t_app_package_info WHERE 1=1
		<if test="orgId != 1">
			AND ORGANIZATION_ID = #{orgId}
		</if>
		<if test="name != '' and name != null">
			AND NAME LIKE CONCAT('%',#{name},'%' )
		</if>
		<if test="packageTypeName != null and packageTypeName != ''">
			AND APP_PACKAGE_TYPE_ID LIKE CONCAT('%',#{packageTypeName},'%' )
		</if>
		<if test="organizationId != '' and organizationId != null">
			AND ORGANIZATION_ID  LIKE CONCAT('%',#{organizationId},'%' )
		</if>
		<if test="sortOrder != null">
			ORDER BY ${sortOrder}
		</if>
		LIMIT #{offset}, #{rows}
	</select>

	<select id="total" parameterType="map" resultType="Long">
		SELECT count(*) FROM t_app_package_info WHERE 1=1
		<if test="orgId != 1">
			AND ORGANIZATION_ID = #{orgId}
		</if>
		<if test="name != '' and name != null">
			AND NAME LIKE CONCAT('%',#{name},'%' )
		</if>
		<if test="packageTypeName != null and packageTypeName != ''">
			AND APP_PACKAGE_TYPE_ID LIKE CONCAT('%',#{packageTypeName},'%' )
		</if>
		<if test="organizationId != '' and organizationId != null">
			AND  ORGANIZATION_ID  LIKE CONCAT('%',#{organizationId},'%' )
		</if>
	</select>

	<select id="load" resultMap="appPackageInfoResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from t_app_package_info
		where ID = #{id,jdbcType=BIGINT}
	</select>

	<delete id="delete" parameterType="java.lang.Long">
		delete from t_app_package_info
		where ID = #{id,jdbcType=BIGINT}
	</delete>

	<insert id="save" parameterType="AppPackageInfo">
		insert into t_app_package_info
		(NAME,ORGANIZATION_ID,APP_PACKAGE_TYPE_ID,
		QUANTITY, SIZE, DESCRIPTION,
		STATUS, CREATED_TIME, CREATOR_ID,
		CREATOR)
		values (#{name,jdbcType=VARCHAR},
		#{organization.id,jdbcType=BIGINT},
		#{appPackageType.id,jdbcType=BIGINT},
		#{quantity,jdbcType=INTEGER}, #{size,jdbcType=DOUBLE}, #{description,jdbcType=VARCHAR},
		#{status,jdbcType=VARCHAR}, #{createdTime,jdbcType=DATE},
		#{creatorId,jdbcType=BIGINT},
		#{creator,jdbcType=VARCHAR})
	</insert>

	<update id="update" parameterType="AppPackageInfo">
		update t_app_package_info 
		set NAME = #{name,jdbcType=VARCHAR},
		ORGANIZATION_ID = #{organization.id,jdbcType=BIGINT},
		APP_PACKAGE_TYPE_ID = #{appPackageType.id,jdbcType=BIGINT},
		DESCRIPTION = #{description,jdbcType=VARCHAR},
		STATUS = #{status,jdbcType=VARCHAR},
		LAST_OPERATOR_ID = #{lastOperatorId,jdbcType=BIGINT},
		LAST_OPERATOR = #{lastOperator,jdbcType=VARCHAR},
		LAST_OPERATED_TIME = #{lastOperatedTime,jdbcType=DATE}
		where ID = #{id,jdbcType=BIGINT}
	</update>
	
	<update id="updateAppByPackageId">
		UPDATE t_app_package_info api 
			SET api.QUANTITY = 
				(SELECT COUNT(pid.APP_PACKAGE_INFO_ID) 
						FROM t_app_package_info_detail pid 
								WHERE pid.APP_PACKAGE_INFO_ID = api.ID)
	</update>
	
	<!-- 更新apk数量 -->
	<update id="updateQty" parameterType="AppPackageInfo">
		update t_app_package_info set
			QUANTITY = #{quantity,jdbcType=INTEGER},
			SIZE = #{size,jdbcType=DOUBLE},
			LAST_OPERATOR_ID = #{lastOperatorId,jdbcType=BIGINT},
			LAST_OPERATOR = #{lastOperator,jdbcType=VARCHAR},
			LAST_OPERATED_TIME = #{lastOperatedTime,jdbcType=DATE}
		where ID = #{id,jdbcType=BIGINT}
	</update>
	
</mapper>